https://babeljs.io/
Language interpreter from latest ECMA Script to Javascript for use on all consoles

From now on use 
Const - Can not be changed. So assignment of variables of functions that are not going to change should be called a const (constant)
nb-constant properties can be changed for example in array assigned to const but not the const
Let-  variable can be used and called from a function and from global access without running and effecting each other

for global access


`used to create strings much easier
symbol used to create unique strings

ARROW FUNCTIONS:

function add(a,b){
  return a + b;
  }
  OR
const add1 (a,b) => a + b;

// change everything below to the newer Javascript!

// let + const
var a = 'test';
var b = true;
var c = 789;
a = 'test2';

let a = 'test';
const b = true;
const c = 789;
a = 'test2';


// Destructuring
var person = {
    firstName : "John",
    lastName  : "Doe",
    age       : 50,
    eyeColor  : "blue"
};

var firstName = person.firstName;
var lastName = person.lastName;
var age = person.age;
var eyeColor = person.eyeColor;

const person = {
    firstName : "John",
    lastName  : "Doe",
    age       : 50,
    eyeColor  : "blue"
};

const { firstName, lastName, age, eyeColor } = person;

// Object properties
var a = 'test';
var b = true;
var c = 789;

var okObj = {
  a: a,
  b: b,
  c: c
};
const a = 'test';
const b = true;
const c = 789;

const okObj = {a, b, c};


// Template strings
var message = "Hello " + firstName + " have I met you before? I think we met in " + city + " last summer no???";
const message = `Hello ${firstName} have I met you before? I think we met in ${city}. last summer no???`;

// default arguments
// default age to 10;
function isValidAge(age) {
    return age
}
const isValidAge = (age = 10) => age;
// Symbol
// Create a symbol: "This is my first Symbol"

// Arrow functions
function whereAmI(username, location) {
    if (username && location) {
        return "I am not lost";
    } else {
        return "I am totally lost!";
    }
}

const whereAmI = (username, location) => {
    if (username && location) {
        return "I am not lost";
    } else {
        return "I am totally lost!";
    }
}
